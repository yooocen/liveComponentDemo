{"version":3,"sources":["list.js","detail.js","bar.js","about.js","home.js","notFound.js","index.js"],"names":["ListPage","state","count","console","log","_this2","this","window","scrollTo","setInterval","setState","list","Array","fill","map","item","index","_react_16_8_4_react_default","a","createElement","Link","className","to","concat","key","timer","desc","React","Component","List","props","match","params","id","Number","parseInt","Bar","placeholder","Home","href","target","rel","NotFound","LiveRoute","withRouter","NotLiveRoute","rootElement","document","getElementById","ReactDOM","render","BrowserRouter","Switch","Route","exact","path","component","Detail","livePath","name","onHide","location","history","alwaysLive","onReappear","About","bar","addEventListener"],"mappings":"+RA4DeA,6MAxDbC,MAAQ,CAAEC,MAAO,yFAGfC,QAAQC,IAAI,8EAGM,IAAAC,EAAAC,KAClBH,QAAQC,IAAI,+BACZG,OAAOC,SAAS,EAAG,GACnBC,YAAY,WACVJ,EAAKK,SAAS,CACZR,MAAOG,EAAKJ,MAAMC,MAAQ,KAE3B,sCAIH,IAAMS,EAAOC,MAAM,KAChBC,KAAK,IACLC,IAAI,SAACC,EAAMC,GACV,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,UAAU,OAAOC,GAAE,SAAAC,OAAWP,GAASQ,IAAKR,GAChDC,EAAAC,EAAAC,cAAA,qBAAaH,MAKfS,EAAQR,EAAAC,EAAAC,cAAA,MAAIE,UAAU,SAAd,UAA8Bf,KAAKL,MAAMC,OACjDwB,EACJT,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACbJ,EAAAC,EAAAC,cAAA,wCAC8BF,EAAAC,EAAAC,cAAA,yBAD9B,QAC0D,IACxDF,EAAAC,EAAAC,cAAA,wBAFF,KAIAF,EAAAC,EAAAC,cAAA,uJAIAF,EAAAC,EAAAC,cAAA,uNAKAF,EAAAC,EAAAC,cAAA,kCAGJ,OACEF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACZI,EACAC,EACAf,UAnDcgB,IAAMC,WCyBdC,EAzBF,SAAAC,GACX,OACEb,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAME,GAAG,UACPL,EAAAC,EAAAC,cAAA,+BAEFF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBAAf,qBAAAE,OACEO,EAAMC,MAAMC,OAAOC,KAErBhB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,UAAU,aACVC,GAAE,SAAAC,OAAWW,OAAOC,SAASL,EAAMC,MAAMC,OAAOC,IAAM,IAFxD,aAMAhB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,UAAU,aACVC,GAAE,SAAAC,OAAWW,OAAOC,SAASL,EAAMC,MAAMC,OAAOC,IAAM,IAFxD,eCJSG,SAVH,SAAAN,GACV,OACEb,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAME,GAAG,KAAT,QACAL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAME,GAAG,UAAT,SACAL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAME,GAAG,UAAT,YCuCStB,6MA7CbC,MAAQ,CAAEC,MAAO,sFAEG,IAAAG,EAAAC,KAClBC,OAAOC,SAAS,EAAG,GACnBC,YAAY,WACVJ,EAAKK,SAAS,CACZR,MAAOG,EAAKJ,MAAMC,MAAQ,KAE3B,sCAIH,IAAMuB,EAAQR,EAAAC,EAAAC,cAAA,MAAIE,UAAU,SAAd,UAA8Bf,KAAKL,MAAMC,OACjDwB,EACJT,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACbJ,EAAAC,EAAAC,cAAA,wCAC8BF,EAAAC,EAAAC,cAAA,yBAD9B,QAC0D,IACxDF,EAAAC,EAAAC,cAAA,0BAFF,KAIAF,EAAAC,EAAAC,cAAA,uFAMEkB,EAAczB,MAAM,IACvBC,KAAK,IACLC,IAAI,SAACC,EAAMC,GACV,OACEC,EAAAC,EAAAC,cAAA,KAAGE,UAAU,mBAAmBG,IAAKR,GAClCA,EADH,2FAMN,OACEC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACZI,EACAC,EACAW,UAxCcV,IAAMC,WCmBdU,EAlBF,SAAAR,GACX,OACEb,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,KACEE,UAAU,gBACVkB,KAAK,+CACLC,OAAO,SACPC,IAAI,uBAEJxB,EAAAC,EAAAC,cAAA,+BAEFF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAME,GAAG,UACPL,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SAAf,iBCFOqB,EATE,SAAAZ,GACf,OACEb,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAME,GAAG,KAAT,UCIAqB,EAAYC,YAAWC,KAmC7B,IAAMC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACPjC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,KACElC,EAAAC,EAAAC,cApCJ,WACE,OACEF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAACiC,EAAA,EAAD,KACEnC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWlB,IACjCrB,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAOE,KAAK,YAAYC,UAAWC,IACnCxC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAOE,KAAK,WACZtC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAOE,KAAK,WACZtC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAOE,KAAK,IAAIL,OAAQR,KAE1BzB,EAAAC,EAAAC,cAACwB,EAAD,CACEY,KAAK,SACLC,UAAW3B,EACX6B,SAAU,YACVC,KAAK,QACLC,OAAQ,SAACC,EAAU9B,EAAO+B,EAASJ,EAAUK,GAC3C5D,QAAQC,IAAI,uBAEd4D,WAAY,SAACH,EAAU9B,EAAO+B,EAASJ,EAAUK,GAC/C5D,QAAQC,IAAI,6BAGhBa,EAAAC,EAAAC,cAACwB,EAAD,CACEY,KAAK,SACLQ,YAAY,EACZP,UAAWS,EACXN,KAAK,UAEP1C,EAAAC,EAAAC,cAAC+C,EAAD,QAQF,OAEFpB,GAGyBvC,OAAOuD,QAKlCf,SAASoB,iBAAiB,WAAY,WACpChE,QAAQC,IAAI","file":"static/js/main.b37ac040.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass ListPage extends React.Component {\n  state = { count: 0 };\n\n  componentWillUnmount() {\n    console.log(\"##### items will unmount #####\");\n  }\n\n  componentDidMount() {\n    console.log(\"##### items did mount #####\");\n    window.scrollTo(0, 0);\n    setInterval(() => {\n      this.setState({\n        count: this.state.count + 1\n      });\n    }, 200);\n  }\n\n  render() {\n    const list = Array(200)\n      .fill(\"\")\n      .map((item, index) => {\n        return (\n          <Link className=\"item\" to={`/item/${index}`} key={index}>\n            <div>Item - {index}</div>\n          </Link>\n        );\n      });\n\n    const timer = <h2 className=\"count\">count: {this.state.count}</h2>;\n    const desc = (\n      <div className=\"desc\">\n        <p>\n          This page of route is using <code>LiveRoute</code> with{\" \"}\n          <code>livePath</code>.\n        </p>\n        <p>\n          In this page, the list page will not be unmounted on item detail page\n          and will be unmounted when enter into other pages such as home page.\n        </p>\n        <p>\n          The count number above is a sign of component live state. It will be\n          reset to 0 when the component of Route unmounted. You can scroll the\n          page and it will be restored when backing from item detail page.\n        </p>\n        <p>Feel free to try it.</p>\n      </div>\n    );\n    return (\n      <div className=\"list\">\n        {timer}\n        {desc}\n        {list}\n      </div>\n    );\n  }\n}\n\nexport default ListPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst List = props => {\n  return (\n    <div>\n      <Link to=\"/items\">\n        <div>&gt;&gt; back to List</div>\n      </Link>\n      <div className=\"detailContent\">{`hello, I'm item - ${\n        props.match.params.id\n      }`}</div>\n      <Link\n        className=\"pagination\"\n        to={`/item/${Number.parseInt(props.match.params.id) - 1}`}\n      >\n        Prev item\n      </Link>\n      <Link\n        className=\"pagination\"\n        to={`/item/${Number.parseInt(props.match.params.id) + 1}`}\n      >\n        Next item\n      </Link>\n    </div>\n  );\n};\n\nexport default List;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./styles.css\";\n\nconst Bar = props => {\n  return (\n    <div className=\"bar\">\n      <Link to=\"/\">Home</Link>\n      <Link to=\"/items\">Items</Link>\n      <Link to=\"/about\">About</Link>\n    </div>\n  );\n};\n\nexport default Bar;\n","import React from \"react\";\n\nclass ListPage extends React.Component {\n  state = { count: 0 };\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n    setInterval(() => {\n      this.setState({\n        count: this.state.count + 1\n      });\n    }, 200);\n  }\n\n  render() {\n    const timer = <h2 className=\"count\">count: {this.state.count}</h2>;\n    const desc = (\n      <div className=\"desc\">\n        <p>\n          This page of route is using <code>LiveRoute</code> with{\" \"}\n          <code>alwaysLive</code>.\n        </p>\n        <p>\n          It will not unmount after mounted and that means it will only mount\n          once.\n        </p>\n      </div>\n    );\n    const placeholder = Array(60)\n      .fill(\"\")\n      .map((item, index) => {\n        return (\n          <p className=\"placeholder-text\" key={index}>\n            {index} - You can scroll the screen to test if react-live-route can\n            restore scroll position.\n          </p>\n        );\n      });\n    return (\n      <div className=\"about\">\n        {timer}\n        {desc}\n        {placeholder}\n      </div>\n    );\n  }\n}\n\nexport default ListPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Home = props => {\n  return (\n    <div>\n      <a\n        className=\"detailContent\"\n        href=\"https://github.com/fi3ework/react-live-route\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <h1>react-live-route</h1>\n      </a>\n      <Link to=\"/items\">\n        <div className=\"entry\">into items</div>\n      </Link>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./styles.css\";\n\nconst NotFound = props => {\n  return (\n    <div>\n      <p>[404]</p>\n      <Link to=\"/\">Home</Link>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Route, BrowserRouter, withRouter, Switch } from \"react-router-dom\";\nimport NotLiveRoute from \"react-live-route\";\nimport List from \"./list\";\nimport Detail from \"./detail\";\nimport Bar from \"./bar\";\nimport About from \"./about\";\nimport Home from \"./home\";\nimport NotFound from \"./notFound\";\nimport \"./styles.css\";\n\nconst LiveRoute = withRouter(NotLiveRoute);\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/item/:id\" component={Detail} />\n        <Route path=\"/items\" />\n        <Route path=\"/about\" />\n        <Route path=\"*\" render={NotFound} />\n      </Switch>\n      <LiveRoute\n        path=\"/items\"\n        component={List}\n        livePath={\"/item/:id\"}\n        name=\"items\"\n        onHide={(location, match, history, livePath, alwaysLive) => {\n          console.log(\"hide hook tiggered\");\n        }}\n        onReappear={(location, match, history, livePath, alwaysLive) => {\n          console.log(\"reappear hook tiggered\");\n        }}\n      />\n      <LiveRoute\n        path=\"/about\"\n        alwaysLive={true}\n        component={About}\n        name=\"about\"\n      />\n      <Bar />\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  rootElement\n);\n\nif (\"scrollRestoration\" in window.history) {\n  // 默认值为 'auto'\n  // window.history.scrollRestoration = 'manual'\n}\n\ndocument.addEventListener(\"scrollTo\", () => {\n  console.log(\"document scrolled\");\n});\n"],"sourceRoot":""}